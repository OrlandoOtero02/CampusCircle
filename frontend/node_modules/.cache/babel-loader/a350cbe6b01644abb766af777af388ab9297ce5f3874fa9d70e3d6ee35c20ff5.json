{"ast":null,"code":"var _jsxFileName = \"/Users/landy/Desktop/code/CS407/CampusCircle/frontend/src/pages/UsersList.js\",\n  _s = $RefreshSig$();\n// UsersList.js\n\nimport { useEffect, useState } from \"react\";\nimport { useAuthContext } from '../hooks/useAuthContext';\n\n// components\nimport UserDetails from '../components/UserDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = () => {\n  _s();\n  const [users, setUsers] = useState(null);\n  //const { user } = useAuthContext();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        // Replace 'currentUserId' with the actual user's ID\n        //const currentUserId = '12345'; // Replace with your logic to get the user's ID\n        //?currentUserId=${currentUserId}\n        const response = await fetch(`/api/user/`);\n        const json = await response.json();\n        if (response.ok) {\n          setUsers(json.users);\n        }\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n\n    // if (user) {\n    fetchUsers();\n    // }\n  }, []);\n\n  // Filter users based on whether the current user is following them\n  const usersNotFollowing = users ? users.filter(user => {\n    return !user.following.includes(user._id); // Assuming you have a followers array in each user object\n  }) : [];\n  const usersFollowing = users ? users.filter(user => {\n    return user.following.includes(user._id); // Assuming you have a followers array in each user object\n  }) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-users-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), usersNotFollowing.map(user => /*#__PURE__*/_jsxDEV(UserDetails, {\n        user: user\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Following\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), usersFollowing.map(user => /*#__PURE__*/_jsxDEV(UserDetails, {\n        user: user\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(UsersList, \"agkcAITZm3jfJZtUcsWKkI40X24=\");\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["useEffect","useState","useAuthContext","UserDetails","jsxDEV","_jsxDEV","UsersList","_s","users","setUsers","fetchUsers","response","fetch","json","ok","error","console","usersNotFollowing","filter","user","following","includes","_id","usersFollowing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/landy/Desktop/code/CS407/CampusCircle/frontend/src/pages/UsersList.js"],"sourcesContent":["// UsersList.js\n\nimport { useEffect, useState } from \"react\";\nimport { useAuthContext } from '../hooks/useAuthContext';\n\n// components\nimport UserDetails from '../components/UserDetails';\n\nconst UsersList = () => {\n    const [users, setUsers] = useState(null);\n    //const { user } = useAuthContext();\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                // Replace 'currentUserId' with the actual user's ID\n                //const currentUserId = '12345'; // Replace with your logic to get the user's ID\n                //?currentUserId=${currentUserId}\n                const response = await fetch(`/api/user/`);\n                const json = await response.json();\n\n                if (response.ok) {\n                    setUsers(json.users);\n                }\n            } catch (error) {\n                console.error(\"Error fetching users:\", error);\n            }\n        }\n\n        // if (user) {\n        fetchUsers();\n        // }\n    }, []);\n\n    // Filter users based on whether the current user is following them\n    const usersNotFollowing = users ? users.filter((user) => {\n        return !user.following.includes(user._id); // Assuming you have a followers array in each user object\n    }) : [];\n\n    const usersFollowing = users ? users.filter((user) => {\n        return user.following.includes(user._id); // Assuming you have a followers array in each user object\n    }) : [];\n\n    return (\n        <div className=\"split-users-list\">\n            <div className=\"users-list\">\n                <h3>Users</h3>\n                {/* {users && users.map((user) => (\n                    <UserDetails key={user._id} user={user} />\n                ))} */}\n                {usersNotFollowing.map((user) => (\n                    <UserDetails key={user._id} user={user} />\n                ))}\n            </div>\n            <div className=\"users-list\">\n                <h3>Following</h3>\n                {/* {users && users.map((user) => (\n                    <UserDetails key={user._id} user={user} />\n                ))} */}\n                {usersFollowing.map((user) => (\n                    <UserDetails key={user._id} user={user} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default UsersList;\n"],"mappings":";;AAAA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,yBAAyB;;AAExD;AACA,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC;;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA;QACA;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,YAAW,CAAC;QAC1C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAElC,IAAIF,QAAQ,CAACG,EAAE,EAAE;UACbL,QAAQ,CAACI,IAAI,CAACL,KAAK,CAAC;QACxB;MACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;;IAED;IACAL,UAAU,CAAC,CAAC;IACZ;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,iBAAiB,GAAGT,KAAK,GAAGA,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAK;IACrD,OAAO,CAACA,IAAI,CAACC,SAAS,CAACC,QAAQ,CAACF,IAAI,CAACG,GAAG,CAAC,CAAC,CAAC;EAC/C,CAAC,CAAC,GAAG,EAAE;EAEP,MAAMC,cAAc,GAAGf,KAAK,GAAGA,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAK;IAClD,OAAOA,IAAI,CAACC,SAAS,CAACC,QAAQ,CAACF,IAAI,CAACG,GAAG,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC,GAAG,EAAE;EAEP,oBACIjB,OAAA;IAAKmB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BpB,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBpB,OAAA;QAAAoB,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAIbZ,iBAAiB,CAACa,GAAG,CAAEX,IAAI,iBACxBd,OAAA,CAACF,WAAW;QAAgBgB,IAAI,EAAEA;MAAK,GAArBA,IAAI,CAACG,GAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNxB,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBpB,OAAA;QAAAoB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAIjBN,cAAc,CAACO,GAAG,CAAEX,IAAI,iBACrBd,OAAA,CAACF,WAAW;QAAgBgB,IAAI,EAAEA;MAAK,GAArBA,IAAI,CAACG,GAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACtB,EAAA,CAzDID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA2Df,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}